#+TITLE:        Docker logs
#+AUTHOR:       scheatkode
#+EMAIL:        scheatkode@gmail.com
#+DESCRIPTION:  Checking docker logs and log rotation
#+PROPERTY:     header-args :tangle no :comments link :results none

In case of a container eating too much disk space, the following might help.

* Log file location

  The following command returns the path to the container log file.
  
  #+begin_src shell
    docker inspect --format='{{.LogPath}}' <container_name_or_id>
  #+end_src

  
* Log file clearing

  Combined with the following commands, the previous one helps in clearing the
  log file.
  
  #+begin_src shell
    echo "" > "$(docker inspect --format='{{.LogPath}}' <container_name_or_id>)"
  #+end_src
  
  Or.

  #+begin_src shell
    truncate -s 0 "$(docker inspect --format='{{.LogPath}}' <container_name_or_id>)"
  #+end_src

* Mitigation
  
  Directly modifying Docker's files is  not recommended since the external log
  deletion could  happen while docker  is writing  =JSON= formatted data  to the
  file, resulting in a partial line, and breaking the ability to read any logs
  from the =docker logs= cli.

  Instead, one  can have Docker  automatically rotate  the logs. This  is done
  with  additional flags  to =dockerd=  if the  default [[https://docs.docker.com/config/containers/logging/json-file/][JSON  logging driver]]  is
  used :

  #+begin_src shell
    dockerd ... --log-opt max-size=10m --log-opt max-file=3
  #+end_src

  One can also set  this as part of the [[https://docs.docker.com/engine/reference/commandline/dockerd/#on-linux][daemon.json]]  file instead of modifying
  the startup scripts :

  #+begin_src javascript
    {
        "log-driver": "json-file",
        "log-opts": {
            "max-size": "10m",
            "max-file": "3"
        }
    }
  #+end_src
